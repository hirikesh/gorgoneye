#############################################################################
# Makefile for building: gorgoneye
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu 29. Apr 03:59:43 2010
# Project:  gorgoneye.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.02.1\qt\include\QtCore" -I"c:\Qt\2010.02.1\qt\include\QtGui" -I"c:\Qt\2010.02.1\qt\include\QtOpenGL" -I"c:\Qt\2010.02.1\qt\include\QtWebKit" -I"c:\Qt\2010.02.1\qt\include" -I"c:\opencv\include\opencv" -I"c:\Qt\2010.02.1\qt\include\ActiveQt" -I"release" -I"." -I"c:\Qt\2010.02.1\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.02.1\qt\lib" -lopengl32 -lglu32 -lgdi32 -luser32 -lmingw32 -lqtmain -LC:\opencv\lib -lcv200 -lcvaux200 -lhighgui200 -lcxcore200 -lml200 -lQtWebKit4 -lQtOpenGL4 -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\2010.02.1\qt\bin\qmake.exe
IDC           = c:\Qt\2010.02.1\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		geye_ui.cpp \
		geye.cpp \
		geye\ge_eye.cpp \
		geye\ge_gaze.cpp \
		geye\ge_head.cpp release\moc_geye_ui.cpp
OBJECTS       = release/main.o \
		release/geye_ui.o \
		release/geye.o \
		release/ge_eye.o \
		release/ge_gaze.o \
		release/ge_head.o \
		release/moc_geye_ui.o
DIST          = 
QMAKE_TARGET  = gorgoneye
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = gorgoneye.exe
DESTDIR_TARGET = release\gorgoneye.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_geye_ui.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2010.02.1\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Release gorgoneye.pro

dist:
	$(ZIP) gorgoneye.zip $(SOURCES) $(DIST) gorgoneye.pro c:\Qt\2010.02.1\qt\mkspecs\qconfig.pri c:\Qt\2010.02.1\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt_config.prf c:\Qt\2010.02.1\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_pre.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2010.02.1\qt\mkspecs\features\release.prf c:\Qt\2010.02.1\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\build_pass.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.02.1\qt\mkspecs\features\shared.prf c:\Qt\2010.02.1\qt\mkspecs\features\warn_on.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\opengl.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.02.1\qt\mkspecs\features\moc.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.02.1\qt\mkspecs\features\resources.prf c:\Qt\2010.02.1\qt\mkspecs\features\uic.prf c:\Qt\2010.02.1\qt\mkspecs\features\yacc.prf c:\Qt\2010.02.1\qt\mkspecs\features\lex.prf c:\Qt\2010.02.1\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.02.1\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\geye_ui.o release\geye.o release\ge_eye.o release\ge_gaze.o release\ge_head.o release\moc_geye_ui.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_geye_ui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_geye_ui.cpp
release/moc_geye_ui.cpp: geye_ui.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 geye_ui.h -o release\moc_geye_ui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_geye_ui.h
compiler_uic_clean:
	-$(DEL_FILE) ui_geye_ui.h
ui_geye_ui.h: geye_ui.ui
	c:\Qt\2010.02.1\qt\bin\uic.exe geye_ui.ui -o ui_geye_ui.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp geye_ui.h \
		geye.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/geye_ui.o: geye_ui.cpp geye_ui.h \
		ui_geye_ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\geye_ui.o geye_ui.cpp

release/geye.o: geye.cpp geye/ge_head.h \
		geye/ge_eye.h \
		geye/ge_gaze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\geye.o geye.cpp

release/ge_eye.o: geye/ge_eye.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ge_eye.o geye\ge_eye.cpp

release/ge_gaze.o: geye/ge_gaze.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ge_gaze.o geye\ge_gaze.cpp

release/ge_head.o: geye/ge_head.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ge_head.o geye\ge_head.cpp

release/moc_geye_ui.o: release/moc_geye_ui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_geye_ui.o release\moc_geye_ui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

